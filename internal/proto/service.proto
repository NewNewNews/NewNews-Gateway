syntax = "proto3";

package gateway;

option go_package = "github.com/yourusername/gateway/internal/proto";

import "google/api/annotations.proto";

service GatewayService {
  rpc Register(RegisterRequest) returns (RegisterResponse) {
    option (google.api.http) = {
      post: "/api/register"
      body: "*"
    };
  }
  
  rpc Login(LoginRequest) returns (LoginResponse) {
    option (google.api.http) = {
      post: "/api/login"
      body: "*"
    };
  }
  
  rpc Protected(ProtectedRequest) returns (ProtectedResponse) {
    option (google.api.http) = {
      get: "/api/protected"
    };
  }

  rpc GetAllUsers(GetAllUsersRequest) returns (GetAllUsersResponse) {
    option (google.api.http) = {
      get: "/api/users"
    };
  }

  rpc UpdateUserByEmail(UpdateUserByEmailRequest) returns (UpdateUserByEmailResponse) {
    option (google.api.http) = {
      put: "/api/users/{email}"
      body: "*"
    };
  }

  rpc DeleteUser(DeleteUserRequest) returns (DeleteUserResponse) {
    option (google.api.http) = {
      delete: "/api/users/{email}"
    };
  }
}

message RegisterRequest {
  string email = 1;
  string password = 2;
}

message RegisterResponse {
  string message = 1;
}

message LoginRequest {
  string email = 1;
  string password = 2;
}

message LoginResponse {
  string token = 1;
}

message ProtectedRequest {}

message ProtectedResponse {
  string message = 1;
}